{
  "version": 3,
  "sources": ["../http-server/lib/validate.js", "../http-server/lib/defaults.json", "../http-server/lib/main.js", "../http-server/lib/index.js", "../disposable-http-server/lib/validate.js", "../disposable-http-server/lib/opts.js", "../disposable-http-server/lib/connections_store.js", "../disposable-http-server/lib/main.js", "../disposable-http-server/lib/index.js", "../simple-http-server/lib/validate.js", "../simple-http-server/lib/opts.js", "../simple-http-server/lib/404.js", "../simple-http-server/lib/request_listener.js", "../simple-http-server/lib/main.js", "../simple-http-server/lib/index.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isNonNegativeInteger = require( '@stdlib/assert/is-nonnegative-integer' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.port] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address] - server address\n* @returns {(Error|null)} error or null\n*\n* @example\n* var options = {\n*     'port': 7331,\n*     'address': '127.0.0.1'\n* };\n* var opts = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'port' ) ) {\n\t\topts.port = options.port;\n\t\tif ( !isNonNegativeInteger( opts.port ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'port', opts.port ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'maxport' ) ) {\n\t\topts.maxport = options.maxport;\n\t\tif ( !isNonNegativeInteger( opts.maxport ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'maxport', opts.maxport ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'hostname' ) ) {\n\t\topts.hostname = options.hostname;\n\t\tif ( !isString( opts.hostname ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'hostname', opts.hostname ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'address' ) ) {\n\t\topts.address = options.address;\n\t\tif ( !isString( opts.address ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'address', opts.address ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "{\n\t\"port\": 0,\n\t\"address\": \"127.0.0.1\"\n}\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar http = require( 'http' );\nvar logger = require( 'debug' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar DEFAULTS = require( './defaults.json' );\n\n\n// VARIABLES //\n\nvar debug = logger( './../../http-server');\n\n\n// MAIN //\n\n/**\n* Returns a function which creates an HTTP server.\n*\n* @param {Options} [options] - server options\n* @param {NonNegativeInteger} [options.port=0] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address=\"127.0.0.1\"] - server address\n* @param {Callback} [requestListener] - callback invoked upon receiving an HTTP request\n* @throws {TypeError} `requestListener` must be a function\n* @throws {TypeError} must provide valid options\n* @returns {Function} function which creates an HTTP server\n*\n* @example\n* var createServer = httpServer();\n*\n* @example\n* var opts = {\n*     'port': 7331,\n*     'address': '0.0.0.0'\n* };\n* var createServer = httpServer( opts );\n*\n* @example\n* var opts = {\n*     'port': 7331,\n*     'address': '0.0.0.0'\n* };\n* function onRequest( request, response ) {\n*     console.log( request.url );\n*     response.end( 'OK' );\n* }\n* var createServer = httpServer( opts, onRequest );\n*/\nfunction httpServer() {\n\tvar requestListener;\n\tvar hostname;\n\tvar options;\n\tvar nargs;\n\tvar opts;\n\tvar port;\n\tvar max;\n\tvar err;\n\n\tnargs = arguments.length;\n\topts = {};\n\tif ( nargs === 1 ) {\n\t\tif ( isFunction( arguments[0] )) {\n\t\t\trequestListener = arguments[ 0 ];\n\t\t} else {\n\t\t\toptions = arguments[ 0 ];\n\t\t\terr = validate( opts, options );\n\t\t}\n\t}\n\telse if ( nargs > 1 ) {\n\t\toptions = arguments[ 0 ];\n\t\trequestListener = arguments[ 1 ];\n\t\tif ( !isFunction( requestListener ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Request listener must be a function. Value: `%s`.', requestListener ) );\n\t\t}\n\t\terr = validate( opts, options );\n\t}\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( opts.port === void 0 ) {\n\t\tport = DEFAULTS.port;\n\t} else {\n\t\tport = opts.port;\n\t}\n\tdebug( 'Server port: %d', port );\n\n\tif ( opts.maxport === void 0 ) {\n\t\tmax = port;\n\t} else {\n\t\tmax = opts.maxport;\n\t}\n\tdebug( 'Max server port: %d', max );\n\n\tif ( opts.hostname ) {\n\t\thostname = opts.hostname;\n\t}\n\telse if ( opts.address ) {\n\t\thostname = opts.address;\n\t}\n\telse {\n\t\thostname = DEFAULTS.address;\n\t}\n\tdebug( 'Server hostname: %s', hostname );\n\n\treturn createServer;\n\n\t/**\n\t* Creates an HTTP server.\n\t*\n\t* @private\n\t* @param {Callback} done - function to invoke after creating a server\n\t* @throws {TypeError} must provide a function\n\t*\n\t* @example\n\t* function done( error, server ) {\n\t*     if ( error ) {\n\t*         throw error;\n\t*     }\n\t*     console.log( 'Success!' );\n\t*     server.close();\n\t* }\n\t* createServer( done );\n\t*/\n\tfunction createServer( done ) {\n\t\tvar server;\n\t\tif ( !isFunction( done ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', done ) );\n\t\t}\n\t\tif ( requestListener ) {\n\t\t\tserver = http.createServer( requestListener );\n\t\t} else {\n\t\t\tserver = http.createServer();\n\t\t}\n\t\tserver.on( 'error', errorListener );\n\t\tserver.once( 'listening', onListen );\n\n\t\tdebug( 'Attempting to listen on %s:%d.', hostname, port );\n\t\tserver.listen( port, hostname );\n\n\t\t/**\n\t\t* Server error event handler.\n\t\t*\n\t\t* @private\n\t\t* @param {Error} error - server error\n\t\t* @throws {Error} server error\n\t\t*/\n\t\tfunction errorListener( error ) {\n\t\t\tif ( error.code === 'EADDRINUSE' ) {\n\t\t\t\tdebug( 'Server address already in use: %s:%d.', hostname, port );\n\t\t\t\tport += 1;\n\t\t\t\tif ( port <= max ) {\n\t\t\t\t\tdebug( 'Attempting to listen on %s:%d.', hostname, port );\n\t\t\t\t\tserver.listen( port, hostname );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked once a server is listening and ready to handle requests.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onListen() {\n\t\t\tvar addr = server.address();\n\t\t\tdebug( 'HTTP server initialized. Server is listening for requests on %s:%d.', addr.address, addr.port );\n\t\t\tdone( null, server );\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = httpServer;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an HTTP server.\n*\n* @module @stdlib/net/http-server\n*\n* @example\n* var httpServer = require( '@stdlib/net/http-server' );\n*\n* var opts = {\n*     'port': 7331,\n*    'address': '0.0.0.0'\n* };\n* function done( error, server ) {\n*    if ( error ) {\n*        throw error;\n*    }\n*    console.log( 'Success!' );\n*    server.close();\n* }\n* var createServer = httpServer( opts );\n* createServer( done );\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBuffer = require( '@stdlib/assert/is-buffer' );\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {(Buffer|string)} [options.html] - HTML content to serve\n* @param {(Buffer|string)} [options.javascript] - JavaScript script to serve\n* @param {boolean} [options.open] - indicates whether to launch a web browser\n* @returns {Error|null} error or null\n*\n* @example\n* var options = {\n*     'port': 7331,\n*     'address': '127.0.0.1',\n*     'open': false\n* };\n* var opts = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'html' ) ) {\n\t\topts.html = options.html;\n\t\tif ( !isBuffer( opts.html ) && !isString( opts.html ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a Buffer or a string. Option: `%s`.', 'html', opts.html ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'javascript' ) ) {\n\t\topts.javascript = options.javascript;\n\t\tif ( !isBuffer( opts.javascript ) && !isString( opts.javascript ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be either a Buffer or a string. Option: `%s`.', 'javascript', opts.javascript ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'open' ) ) {\n\t\topts.open = options.open;\n\t\tif ( !isBoolean( opts.open ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'open', opts.open ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Extracts HTTP server options from input function options.\n*\n* @private\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.port] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address] - server address\n* @returns {Options} server options\n*\n* @example\n* var options = {\n*     'html': '<h1>beep</h1>',\n*     'open': true,\n*     'port': 7331,\n*     'address': '127.0.0.1'\n* };\n* var out = opts( options );\n* // returns {'port': 7331, 'address': '127.0.0.1'}\n*/\nfunction opts( options ) {\n\tvar out = {};\n\tif ( hasOwnProp( options, 'port' ) ) {\n\t\tout.port = options.port;\n\t}\n\tif ( hasOwnProp( options, 'maxport' ) ) {\n\t\tout.maxport = options.maxport;\n\t}\n\tif ( hasOwnProp( options, 'hostname' ) ) {\n\t\tout.hostname = options.hostname;\n\t}\n\tif ( hasOwnProp( options, 'address' ) ) {\n\t\tout.address = options.address;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = opts;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a new connections store.\n*\n* @private\n* @returns {Object} store\n*/\nfunction create() {\n\treturn {};\n}\n\n\n// EXPORTS //\n\nmodule.exports = create;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar path = require( 'path' );\nvar logger = require( 'debug' );\nvar objectKeys = require( '@stdlib/utils/keys' );\nvar createServer = require( './../../http-server' );\nvar readFileSync = require( '@stdlib/fs/read-file' ).sync;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar openURL = require( '@stdlib/utils/open-url' );\nvar noop = require( '@stdlib/utils/noop' );\nvar Buffer = require( '@stdlib/buffer/ctor' );\nvar string2buffer = require( '@stdlib/buffer/from-string' );\nvar nextTick = require( '@stdlib/utils/next-tick' );\nvar format = require( '@stdlib/string/format' );\nvar validate = require( './validate.js' );\nvar serverOpts = require( './opts.js' );\nvar createStore = require( './connections_store.js' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'disposable-http-server' );\n\n\n// MAIN //\n\n/**\n* Creates a disposable HTTP server.\n*\n* @param {Options} options - server options\n* @param {(Buffer|string)} [options.html] - HTML content to serve\n* @param {(Buffer|string)} [options.javascript] - JavaScript to serve\n* @param {NonNegativeInteger} [options.port=0] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address=\"0.0.0.0\"] - server address\n* @param {boolean} [options.open=false] - boolean indicating whether to launch a web browser\n* @param {Callback} [clbk] - callback to invoke upon creating a server\n* @throws {TypeError} must provide valid options\n* @throws {Error} error encountered when starting server\n*\n* @example\n* var opts = {\n*     'html': '<h1>Beep</h1>'\n* };\n*\n* httpServer( opts, onReady );\n*\n* function onReady( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     server.close();\n* }\n*/\nfunction httpServer( options ) {\n\tvar connections;\n\tvar isClosing;\n\tvar server;\n\tvar sopts;\n\tvar fpath;\n\tvar clbk;\n\tvar boot;\n\tvar opts;\n\tvar err;\n\n\topts = {};\n\tif ( arguments.length > 1 ) {\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t} else {\n\t\tclbk = noop;\n\t}\n\terr = validate( opts, options );\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\t// If provided HTML and/or JavaScript as `strings`, convert to `buffers`...\n\tif ( opts.html && isString( opts.html ) ) {\n\t\topts.html = string2buffer( opts.html );\n\t}\n\tif ( opts.javascript && isString( opts.javascript ) ) {\n\t\topts.javascript = string2buffer( opts.javascript );\n\t}\n\t// Extract server options:\n\tsopts = serverOpts( options );\n\n\tdebug( 'Serving provided content.' );\n\tif ( !opts.html ) {\n\t\tdebug( 'No HTML content provided.' );\n\t\tdebug( 'Loading a boilerplate HTML page...' );\n\t\tfpath = path.resolve( __dirname, '../static/index.html' );\n\t\topts.html = readFileSync( fpath );\n\t}\n\t// Create a function to boot a server...\n\tboot = createServer( sopts, requestListener );\n\n\tdebug( 'Starting server...' );\n\tboot( onServer );\n\n\t// Initialize a connections store:\n\tconnections = createStore();\n\n\t/**\n\t* Callback invoked upon creating a server.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {Server} _server - server instance\n\t* @throws {Error} error encountered when starting server\n\t*/\n\tfunction onServer( error, _server ) {\n\t\tvar addr;\n\t\tif ( error ) {\n\t\t\tthrow error;\n\t\t}\n\t\tdebug( 'Server started.' );\n\t\tserver = _server;\n\t\tserver.on( 'connection', onConnection );\n\t\tserver.once( 'close', onClose );\n\t\tif ( opts.open ) {\n\t\t\taddr = server.address();\n\t\t\topenURL( 'http://'+addr.address+':'+addr.port );\n\t\t}\n\t\tclbk( null, server );\n\t}\n\n\t/**\n\t* Callback invoked upon receiving a socket connection.\n\t*\n\t* @private\n\t* @param {Socket} socket - socket connection\n\t*/\n\tfunction onConnection( socket ) {\n\t\tvar key = socket.remoteAddress + ':' + socket.remotePort;\n\n\t\tdebug( 'Received a socket connection: %s.', key );\n\t\tconnections[ key ] = socket;\n\t\tsocket.on( 'close', onClose );\n\n\t\t/**\n\t\t* Callback invoked once a socket connection closes.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onClose() {\n\t\t\tdebug( 'Socket connection closed: %s.', key );\n\t\t\tdelete connections[ key ];\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon receiving an HTTP request for provided content.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t* @returns {void}\n\t*/\n\tfunction requestListener( request, response ) {\n\t\tdebug( 'Received a request for %s', request.url );\n\n\t\tif ( isClosing ) {\n\t\t\treturn unavailable( request, response );\n\t\t}\n\t\tif ( request.url === '/bundle.js' ) {\n\t\t\tnextTick( onTick( sendJavaScript ) );\n\t\t\treturn response.once( 'finish', onFinish );\n\t\t}\n\t\tif ( request.url !== '/' && request.url !== '/index.html' ) {\n\t\t\treturn notFound( request, response );\n\t\t}\n\t\tnextTick( onTick( sendHTML ) );\n\t\tif ( !opts.javascript ) {\n\t\t\tresponse.once( 'finish', onFinish );\n\t\t}\n\n\t\t/**\n\t\t* Returns a callback to return a response on the next tick. Note that this is a workaround for a race condition bug in Node v0.10 (see [nodejs/node#1309][1]).\n\t\t*\n\t\t* [1]: https://github.com/nodejs/node/issues/1309\n\t\t*\n\t\t* @private\n\t\t* @param {Function} fcn - response function\n\t\t* @returns {Callback} callback to invoke on next tick\n\t\t*/\n\t\tfunction onTick( fcn ) {\n\t\t\treturn next;\n\n\t\t\t/**\n\t\t\t* Callback to return on a response.\n\t\t\t*\n\t\t\t* @private\n\t\t\t*/\n\t\t\tfunction next() {\n\t\t\t\tfcn( request, response );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Sends a 404 response.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction notFound( request, response ) {\n\t\tdebug( 'Sending 404 response...' );\n\t\tresponse.statusCode = 404;\n\t\tresponse.end();\n\t}\n\n\t/**\n\t* Sends a 503 response.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction unavailable( request, response ) {\n\t\tdebug( 'Sending 503 response...' );\n\t\tresponse.statusCode = 503;\n\t\tresponse.end();\n\t}\n\n\t/**\n\t* Sends HTML content in response to a client request.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction sendHTML( request, response ) {\n\t\tdebug( 'Sending HTML...' );\n\t\tresponse.statusCode = 200;\n\t\tresponse.setHeader( 'Content-Type', 'text/html' );\n\n\t\t// TODO: we have to convert to a `string` because Node v0.10 requires a `string`. Subsequent versions support providing a `Buffer` object. Ideally, we would sniff `Buffer` support and only convert to a `string` if necessary.\n\t\tresponse.setHeader( 'Content-Length', Buffer.byteLength( opts.html.toString() ) );\n\t\tresponse.end( opts.html );\n\t}\n\n\t/**\n\t* Sends JavaScript content in response to a client request.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction sendJavaScript( request, response ) {\n\t\tdebug( 'Sending JavaScript...' );\n\t\tresponse.statusCode = 200;\n\t\tresponse.setHeader( 'Content-Type', 'text/javascript' );\n\n\t\t// TODO: we have to convert to a `string` because Node v0.10 requires a `string`. Subsequent versions support providing a `Buffer` object. Ideally, we would sniff `Buffer` support and only convert to a `string` if necessary.\n\t\tresponse.setHeader( 'Content-Length', Buffer.byteLength( opts.javascript.toString() ) );\n\t\tresponse.end( opts.javascript );\n\t}\n\n\t/**\n\t* Callback invoked once the server should close.\n\t*\n\t* @private\n\t*/\n\tfunction onFinish() {\n\t\tdebug( 'Finished serving content.' );\n\t\tisClosing = true;\n\n\t\tdebug( 'Closing the server...' );\n\t\tserver.close();\n\n\t\tsetTimeout( destroyConnections, 5000 );\n\t}\n\n\t/**\n\t* Destroys all connections.\n\t*\n\t* @private\n\t*/\n\tfunction destroyConnections() {\n\t\tvar keys;\n\t\tvar i;\n\n\t\tdebug( 'Destroying all connections...' );\n\t\tkeys = objectKeys( connections );\n\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\tdebug( 'Destroying connection %s...', keys[i] );\n\t\t\tconnections[ keys[i] ].destroy();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked once a server closes.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tdebug( 'Server closed.' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = httpServer;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a disposable HTTP server.\n*\n* @module @stdlib/net/disposable-http-server\n*\n* @example\n* var httpServer = require( '@stdlib/net/disposable-http-server' );\n*\n* var opts = {\n*     'html': '<h1>Beep</h1>'\n* };\n*\n* httpServer( opts, onReady );\n*\n* function onReady( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     server.close();\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert/is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert/is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\nvar format = require( '@stdlib/string/format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.dir] - directory from which to serve files\n* @param {boolean} [options.open] - indicates whether to launch a web browser\n* @returns {(Error|null)} error or null\n*\n* @example\n* var options = {\n*     'port': 7331,\n*     'address': '127.0.0.1',\n*     'open': false\n* };\n* var opts = {};\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'dir' ) ) {\n\t\topts.dir = options.dir;\n\t\tif ( !isString( opts.dir ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'dir', opts.dir ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'open' ) ) {\n\t\topts.open = options.open;\n\t\tif ( !isBoolean( opts.open ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'open', opts.open ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert/has-own-property' );\n\n\n// MAIN //\n\n/**\n* Extracts HTTP server options from input function options.\n*\n* @private\n* @param {Options} options - function options\n* @param {NonNegativeInteger} [options.port] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address] - server address\n* @returns {Options} server options\n*\n* @example\n* var options = {\n*     'open': true,\n*     'port': 7331,\n*     'address': '127.0.0.1'\n* };\n* var out = opts( options );\n* // returns {'port': 7331, 'address': '127.0.0.1'}\n*/\nfunction opts( options ) {\n\tvar out = {};\n\tif ( hasOwnProp( options, 'port' ) ) {\n\t\tout.port = options.port;\n\t}\n\tif ( hasOwnProp( options, 'maxport' ) ) {\n\t\tout.maxport = options.maxport;\n\t}\n\tif ( hasOwnProp( options, 'hostname' ) ) {\n\t\tout.hostname = options.hostname;\n\t}\n\tif ( hasOwnProp( options, 'address' ) ) {\n\t\tout.address = options.address;\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = opts;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar logger = require( 'debug' );\nvar string2buffer = require( '@stdlib/buffer/from-string' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'simple-http-server:404' );\nvar message = string2buffer( 'File not found' );\n\n\n// MAIN //\n\n/**\n* Returns a `404` response.\n*\n* @private\n* @param {IncomingMessage} request - HTTP request object\n* @param {ServerResponse} response - HTTP response object\n*/\nfunction notFound( request, response ) {\n\tdebug( 'Sending 404 response...' );\n\tresponse.statusCode = 404;\n\tresponse.setHeader( 'Content-Type', 'text/plain' );\n\tresponse.setHeader( 'Content-Length', message.length );\n\tresponse.end( message );\n}\n\n\n// EXPORTS //\n\nmodule.exports = notFound;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar resolve = require( 'path' ).resolve;\nvar logger = require( 'debug' );\nvar readDir = require( '@stdlib/fs/read-dir' );\nvar notFound = require( './404.js' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'simple-http-server:request-listener' );\n\n\n// MAIN //\n\n/**\n* Returns a request listener for serving a directory.\n*\n* @private\n* @param {Options} opts - server options\n* @param {string} opts.dir - directory to serve\n* @returns {Function} request listener\n*/\nfunction requestListener( opts ) {\n\treturn onRequest;\n\n\t/**\n\t* Callback invoked upon receiving an HTTP request when serving a directory.\n\t*\n\t* @private\n\t* @param {IncomingMessage} request - HTTP request object\n\t* @param {ServerResponse} response - HTTP response object\n\t*/\n\tfunction onRequest( request, response ) {\n\t\tvar path;\n\n\t\tdebug( 'Received a request for %s', request.url );\n\n\t\t// Resolve the directory path, making sure to guard against attempts to access parent directories...\n\t\tpath = request.url.substring( 1 ); // remove leading `/`\n\t\tpath = resolve( opts.dir, path );\n\t\tif ( path.substring( opts.dir.length ) === '' ) {\n\t\t\tpath = opts.dir;\n\t\t}\n\t\tdebug( 'Request resolved to path %s', path );\n\t\tdebug( 'Reading directory' );\n\t\treadDir( path, onDir );\n\n\t\t/**\n\t\t* Callback invoked after reading a directory's contents.\n\t\t*\n\t\t* @private\n\t\t* @param {(Error|null)} error - error object\n\t\t* @param {StringArray} contents - directory contents\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction onDir( error, contents ) { // eslint-disable-line no-unused-vars\n\t\t\tif ( error ) {\n\t\t\t\tif (\n\t\t\t\t\terror.code === 'ENOENT' ||\n\t\t\t\t\terror.code === 'ENOTDIR'\n\t\t\t\t) {\n\t\t\t\t\t// Return a `404` response...\n\t\t\t\t\treturn notFound( response );\n\t\t\t\t}\n\t\t\t\t// TODO\n\t\t\t}\n\t\t\t// TODO\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = requestListener;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar path = require( 'path' );\nvar logger = require( 'debug' );\nvar cwd = require( '@stdlib/process/cwd' );\nvar createServer = require( './../../http-server' );\nvar isFunction = require( '@stdlib/assert/is-function' );\nvar openURL = require( '@stdlib/utils/open-url' );\nvar format = require( '@stdlib/string/format' );\nvar noop = require( '@stdlib/utils/noop' );\nvar validate = require( './validate.js' );\nvar serverOpts = require( './opts.js' );\nvar requestListener = require( './request_listener.js' );\n\n\n// VARIABLES //\n\nvar debug = logger( 'simple-http-server' );\n\n\n// MAIN //\n\n/**\n* Creates a simple HTTP server. The implementation takes inspiration from Python's [SimpleHTTPServer][python-simplehttpserver].\n*\n* [python-simplehttpserver]: https://docs.python.org/2/library/simplehttpserver.html\n*\n* @param {Options} [options] - server options\n* @param {string} [options.dir] - directory from which to serve files\n* @param {NonNegativeInteger} [options.port=0] - server port\n* @param {NonNegativeInteger} [options.maxport] - max server port\n* @param {string} [options.hostname] - server hostname\n* @param {string} [options.address=\"0.0.0.0\"] - server address\n* @param {boolean} [options.open=false] - indicates whether to launch a web browser\n* @param {Callback} [clbk] - callback to invoke upon creating a server\n* @throws {TypeError} must provide valid options\n* @throws {Error} error encountered when starting server\n*\n* @example\n* var opts = {\n*     'dir': './',\n*     'port': 7331,\n*     'hostname': 'localhost',\n*     'open': false\n* };\n* httpServer( opts, onReady );\n*\n* function onReady( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     server.close();\n* }\n*/\nfunction httpServer() {\n\tvar options;\n\tvar server;\n\tvar sopts;\n\tvar clbk;\n\tvar boot;\n\tvar opts;\n\tvar err;\n\n\topts = {};\n\tif ( arguments.length === 1 ) {\n\t\tif ( isFunction( arguments[0] ) ) {\n\t\t\tclbk = arguments[ 0 ];\n\t\t} else {\n\t\t\toptions = arguments[ 0 ];\n\t\t\terr = validate( opts, options );\n\t\t}\n\t} else if ( arguments.length > 1 ) {\n\t\toptions = arguments[ 0 ];\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t\t}\n\t\terr = validate( opts, options );\n\t}\n\tif ( err ) {\n\t\tthrow err;\n\t}\n\tif ( clbk === void 0 ) {\n\t\tclbk = noop;\n\t}\n\tif ( opts.dir ) {\n\t\topts.dir = path.resolve( cwd(), opts.dir );\n\t}\n\tdebug( 'Serving directory: %s', opts.dir );\n\n\t// Extract server options...\n\tif ( options ) {\n\t\tsopts = serverOpts( options );\n\t} else {\n\t\tsopts = {};\n\t}\n\t// Create a function to boot a server...\n\tboot = createServer( sopts, requestListener( opts ) );\n\n\tdebug( 'Starting server...' );\n\tboot( onServer );\n\n\t/**\n\t* Callback invoked upon creating a server.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {Server} _server - server instance\n\t* @throws {Error} error encountered when starting server\n\t*/\n\tfunction onServer( error, _server ) {\n\t\tvar addr;\n\t\tif ( error ) {\n\t\t\tthrow error;\n\t\t}\n\t\tdebug( 'Server started.' );\n\t\tserver = _server;\n\t\tserver.once( 'close', onClose );\n\t\tif ( opts.open ) {\n\t\t\taddr = server.address();\n\t\t\topenURL( 'http://'+addr.address+':'+addr.port );\n\t\t}\n\t\tclbk( null, server );\n\t}\n\n\t/**\n\t* Callback invoked once a server closes.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tdebug( 'Server closed.' );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = httpServer;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create a simple HTTP server.\n*\n* @module @stdlib/net/simple-http-server\n*\n* @example\n* var httpServer = require( '@stdlib/net/simple-http-server' );\n*\n* var opts = {\n*     'dir': './',\n*     'port': 7331,\n*     'hostname': 'localhost',\n*     'open': false\n* };\n* httpServer( opts, onReady );\n*\n* function onReady( error, server ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     server.close();\n* }\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils/define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace net\n*/\nvar net = {};\n\n/**\n* @name tempHttpServer\n* @memberof net\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/net/disposable-http-server}\n*/\nsetReadOnly( net, 'tempHttpServer', require( './../disposable-http-server' ) );\n\n/**\n* @name httpServer\n* @memberof net\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/net/http-server}\n*/\nsetReadOnly( net, 'httpServer', require( './../http-server' ) );\n\n/**\n* @name simpleHttpServer\n* @memberof net\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/net/simple-http-server}\n*/\nsetReadOnly( net, 'simpleHttpServer', require( './../simple-http-server' ) );\n\n\n// EXPORTS //\n\nmodule.exports = net;\n"],
  "mappings": "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",
  "names": ["require_validate", "__commonJSMin", "exports", "module", "isNonNegativeInteger", "isString", "isObject", "hasOwnProp", "format", "validate", "opts", "options", "require_defaults", "__commonJSMin", "exports", "module", "require_main", "__commonJSMin", "exports", "module", "http", "logger", "isFunction", "format", "validate", "DEFAULTS", "debug", "httpServer", "requestListener", "hostname", "options", "nargs", "opts", "port", "max", "err", "createServer", "done", "server", "errorListener", "onListen", "error", "addr", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isBuffer", "isBoolean", "isString", "isObject", "hasOwnProp", "format", "validate", "opts", "options", "require_opts", "__commonJSMin", "exports", "module", "hasOwnProp", "opts", "options", "out", "require_connections_store", "__commonJSMin", "exports", "module", "create", "require_main", "__commonJSMin", "exports", "module", "path", "logger", "objectKeys", "createServer", "readFileSync", "isString", "isFunction", "openURL", "noop", "Buffer", "string2buffer", "nextTick", "format", "validate", "serverOpts", "createStore", "debug", "httpServer", "options", "connections", "isClosing", "server", "sopts", "fpath", "clbk", "boot", "opts", "err", "requestListener", "onServer", "error", "_server", "addr", "onConnection", "onClose", "socket", "key", "request", "response", "unavailable", "onTick", "sendJavaScript", "onFinish", "notFound", "sendHTML", "fcn", "next", "destroyConnections", "keys", "i", "require_lib", "__commonJSMin", "exports", "module", "main", "require_validate", "__commonJSMin", "exports", "module", "isBoolean", "isString", "isObject", "hasOwnProp", "format", "validate", "opts", "options", "require_opts", "__commonJSMin", "exports", "module", "hasOwnProp", "opts", "options", "out", "require__", "__commonJSMin", "exports", "module", "logger", "string2buffer", "debug", "message", "notFound", "request", "response", "require_request_listener", "__commonJSMin", "exports", "module", "resolve", "logger", "readDir", "notFound", "debug", "requestListener", "opts", "onRequest", "request", "response", "path", "onDir", "error", "contents", "require_main", "__commonJSMin", "exports", "module", "path", "logger", "cwd", "createServer", "isFunction", "openURL", "format", "noop", "validate", "serverOpts", "requestListener", "debug", "httpServer", "options", "server", "sopts", "clbk", "boot", "opts", "err", "onServer", "error", "_server", "addr", "onClose", "require_lib", "__commonJSMin", "exports", "module", "main", "setReadOnly", "net"]
}
